kernel: denoise2d
burst width: 512
dram separate: no
dram bank: 1
unroll factor: 4
iterate: 1
border: ignore
cluster: none

input float: uf[2](32,) # [u,f]
local float: diff_u(0, 0) ~12= uf[0](0, 0) - uf[0]( 0, -1)
local float: diff_d(0, 0) ~12= uf[0](0, 0) - uf[0]( 0,  1)
local float: diff_l(0, 0) ~12= uf[0](0, 0) - uf[0](-1,  0)
local float: diff_r(0, 0) ~12= uf[0](0, 0) - uf[0]( 1,  0)
local float: g(0, 0) ~105= 1.0f / sqrt(1.0f+
    diff_u(0, 0)*diff_u(0, 0)+
    diff_d(0, 1)*diff_d(0, 1)+
    diff_l(0, 0)*diff_l(0, 0)+
    diff_r(1, 0)*diff_r(1, 0))
local float: r0(0, 0) ~14= uf[0](0, 0) * uf[1](0, 0) * 4.9f
local float:
    r1(0, 0) ~50= (r0(0, 0) * (2.5f + r0(0, 0) * (10.2f + r0(0, 0))))*
        (4.3f + r0(0, 0) * (5.4f + r0(0, 0) * ( 6.3f + r0(0, 0))))
output float:
    output(0, 0) ~70= (uf[0](0, 0) + 7.7f *
        (uf[0]( 0,  1) * g( 0,  1) +
         uf[0]( 0, -1) * g( 0, -1) +
         uf[0](-1,  0) * g(-1,  0) +
         uf[0]( 1,  0) * g( 1,  0) +
        5.7f * uf[1](0, 0) * r1(0, 0))) * (11.1f + 7.7f *
        (g( 0,  1) +
         g( 0, -1) +
         g(-1,  0) +
         g( 1,  0) + 5.7f))

