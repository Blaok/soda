#!/usr/bin/python3
"""Fixes size field in xclbin2 files.

Test real size of xclbin2 files and fixes corresponding field in the file if
necessary.

Args:
    A list of xclbin2 file names.
"""

import mmap
import os
import sys

_OFFSET = 8+32+256+8
def fix_xclbin2_size(file_name):
    """Fixes size field in an xclbin2 file.

    Test real size of an xclbin2 and fixes corresponding field in the file if
    necessary.

    Args:
        file_name: A string represents the name of the xclbin2 file.
    """
    with open(file_name, "r+b") as xclbin_file:
        correct_size = os.stat(xclbin_file.fileno()).st_size
        mmapped = mmap.mmap(xclbin_file.fileno(), min(_OFFSET+8, correct_size))
        if mmapped[:8] == 'xclbin2\0'.encode('utf-8'):
            previous_size = int.from_bytes(mmapped[_OFFSET:_OFFSET+8],
                                           byteorder=sys.byteorder)
            if previous_size != correct_size:
                print('fix %s: %d -> %d' % (file_name, previous_size,
                                            correct_size))
                mmapped[_OFFSET:_OFFSET+8] = correct_size.to_bytes(
                    8, byteorder=sys.byteorder)
            else:
                print('skip %s: %d correct' % (file_name, correct_size))
        else:
            print('skip %s: not xclbin2 file' % file_name)
        mmapped.close()

if __name__ == '__main__':
    for name in sys.argv[1:]:
        fix_xclbin2_size(name)
